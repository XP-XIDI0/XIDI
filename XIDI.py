#XIDI
#XP TEAM
import base64
exec(base64.b64decode("I2NvZGluZz11dGYtOA0KIyEvdXNyL2Jpbi9weXRob24yDQojY29kaW5nPXV0Zi04DQojRGV2IDogWFAgVEVBTQ0KdHJ5Og0KCWltcG9ydCBvcyxzeXMsdGltZSxkYXRldGltZSxyYW5kb20saGFzaGxpYixyZSx0aHJlYWRpbmcsanNvbixnZXRwYXNzLHVybGxpYixjb29raWVsaWIscmVxdWVzdHMsdXVpZCxzdHJpbmcNCglmcm9tIG11bHRpcHJvY2Vzc2luZy5wb29sIGltcG9ydCBUaHJlYWRQb29sDQoJZnJvbSByZXF1ZXN0cy5leGNlcHRpb25zIGltcG9ydCBDb25uZWN0aW9uRXJyb3INCmV4Y2VwdCBJbXBvcnRFcnJvcjoNCglvcy5zeXN0ZW0oInBpcDIgaW5zdGFsbCByZXF1ZXN0cyIpDQoNCmFnZW50cyA9Ww0KICAiTW96aWxsYS81LjAgKExpbnV4OyBBbmRyb2lkIDcuMDsgU00tQTMxMEYgQnVpbGQvTlJEOTBNKSBBcHBsZVdlYktpdC81MzcuMzYgKEtIVE1MLCBsaWtlIEdlY2tvKSBDaHJvbWUvNTUuMC4yODgzLjkxIE1vYmlsZSBTYWZhcmkvNTM3LjM2IE9QUi80Mi43LjIyNDYuMTE0OTk2Ig0KXQ0KYmlydGggPSBbJzAwMScsICcwMicsICcwMycsICcwNCcsICcwNScsICcwNicsICcwNycsICcwOCcsICcwOScsICcxMCcsICcxMScsICcxMicsICcxMycsICcxNCcsICcxNScsICcxNicsICcxNycsICcxOCcsICcxOScsICcyMCcsICcyMSddDQpiZCA9IHJhbmRvbS5yYW5kaW50KDJlNywgM2U3KQ0Kc2ltID0gcmFuZG9tLnJhbmRpbnQoMmU0LCA0ZTQpDQpoZWFkZXIgPSB7J3gtZmItY29ubmVjdGlvbi1iYW5kd2lkdGgnOiByZXByKGJkKSwgJ3gtZmItc2ltLWhuaSc6IHJlcHIoc2ltKSwgJ3gtZmItbmV0LWhuaSc6IHJlcHIoc2ltKSwneC1mYi1jb25uZWN0aW9uLXF1YWxpdHknOiAnRVhDRUxMRU5UJywgJ3VzZXItYWdlbnQnOidNb3ppbGxhLzUuMCAoV2luZG93cyBOVCAxMC4wOyBXaW42NDsgeDY0KSBBcHBsZVdlYktpdC81MzcuMzYgKEtIVE1MLCBsaWtlIEdlY2tvKSBDaHJvbWUvODkuMC40Mzg5LjExNCBTYWZhcmkvNTM3LjMnLCd4LWZiLWNvbm5lY3Rpb24tdHlwZSc6ICd1bmtub3duJywnY29udGVudC10eXBlJzogJ2FwcGxpY2F0aW9uL3gtd3d3LWZvcm0tdXJsZW5jb2RlZCcsICd4LWZiLWh0dHAtZW5naW5lJzogJ0xpZ2VyJ30NCmxvZ28gPSAiIiINClwwMzNbMTs5N23ilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIANCiAgICAgIA0KDQpcMDMzWzE7OTVtIyMgICAgICMjICMjIyMgIyMjIyMjIyMgICMjIyMgDQpcMDMzWzE7OTVtICMjICAgIyMgICAjIyAgIyMgICAgICMjICAjIyAgDQpcMDMzWzE7OTdtICAjIyAjIyAgICAjIyAgIyMgICAgICMjICAjIyAgDQpcMDMzWzE7OTdtICAgIyMjICAgICAjIyAgIyMgICAgICMjICAjIyAgDQpcMDMzWzE7OTdtICAjIyAjIyAgICAjIyAgIyMgICAgICMjICAjIyAgDQpcMDMzWzE7OTVtICMjICAgIyMgICAjIyAgIyMgICAgICMjICAjIyAgDQpcMDMzWzE7OTVtIyMgICAgICMjICMjIyMgIyMjIyMjIyMgICMjIyMgDQoNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICANClwwMzNbMTs5N23ilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIANClwwMzNbMTs5NW3inqMgQVVUSE9SICAgICA6IEFMSSBYUA0KXDAzM1sxOzk1beKeoyBURUFNICAgICAgICAgOiBYUCBURUFNDQpcMDMzWzE7OTVt4p6jIEZBQ0VCT09LIDogTVVIQU1NQUQgQVJTSEFEDQpcMDMzWzE7OTVt4p6jIEdJVEhVQiAgICAgOiAgWFAtWElESTANClwwMzNbMTs5N23ilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIAiIiINCg0KDQpkZWYgbWFpbigpOg0KCW9zLnN5c3RlbSgiY2xlYXIiKQ0KCXByaW50KGxvZ28pDQoJcHJpbnQoIiIpDQoJcHJpbnQoIiBceDFiWzE7OTVtICAgIFx0TWFpbiBtZW51IikNCglwcmludCgiIikNCglwcmludCgiIFx4MWJbMTs5NW0gICAgIFsxXSBDbG9uaW5nIFN0YXJ0XG4iKQ0KCXByaW50KCIiKQ0KCW9zLnN5c3RlbSgneGRnLW9wZW4gaHR0cHM6Ly93d3cuZmFjZWJvb2suY29tL1hJREkwMDEnKQ0KCWxvZ19zZWwoKQ0KZGVmIGxvZ19zZWwoKToNCglzZWxlY3QgPSByYXdfaW5wdXQoIlwwMzNbMTs5N21DaG9vc2Ugb3B0aW9uOiBcMDMzWzA7OTNtIikNCglpZiBzZWxlY3QgPT0iMSI6DQoJCWxvZ2luKCkNCiAgIA0KCWVsc2U6DQoJCXByaW50KCIiKQ0KCQlwcmludCgiXHRTZWxlY3QgdmFsaWQgb3B0aW9uIikNCgkJcHJpbnQoIiIpDQoJCWxvZ19zZWxlY3QoKQ0KZGVmIGxvZ2luKCk6DQoJdHJ5Og0KCQl0b2tlbiA9IG9wZW4oImFjY2Vzc190b2tlbi50eHQiLCAiciIpLnJlYWQoKQ0KCQltZW51KCkNCglleGNlcHQoS2V5RXJyb3IgLCBJT0Vycm9yKToNCgkJb3Muc3lzdGVtKCJjbGVhciIpDQoJCXByaW50KGxvZ28pDQoJCXByaW50KCIiKQ0KCQlwcmludCgiIFx4MWJbMTs5N20gIFx0RmFjZWJvb2sgbG9naW4iKQ0KCQlwcmludCgiIikNCgkJcHJpbnQoNDcqIuKUgCIpDQoJCXByaW50KCIgXHgxYlsxOzk3bSAgIFsxXSBMb2dpbiB3aXRoIGZhY2Vib29rXG4iKQ0KCQlwcmludCgiIFx4MWJbMTs5N20gICBbMl0gTG9naW4gd2l0aCB0b2tlblxuIikNCgkJcHJpbnQoIiAgXHgxYlsxOzk3bSAgWzNdIEJhY2sgIikNCgkJcHJpbnQoNDcqIuKUgCIpDQoJCXByaW50KCIiKQ0KCQlsb2dfc2VsZWN0KCkNCmRlZiBsb2dfc2VsZWN0KCk6DQoJc2VsID0gcmF3X2lucHV0KCIgQ2hvb3NlIGFuIG9wdGlvbjogIikNCglpZiBzZWwgPT0iMSI6DQoJCWxvZ19mYigpDQoJZWxpZiBzZWwgPT0iMiI6DQoJCXRva2VuKCkNCgllbGlmIHNlbCA9PSIzIjoNCgkJcmFuKCkNCgllbHNlOg0KCQlwcmludCgiIikNCgkJcHJpbnQoIlx0U2VsZWN0IHZhbGlkIG9wdGlvbiIpDQoJCXByaW50KCIiKQ0KCQlsb2dfc2VsZWN0KCkNCmRlZiBsb2dfZmIoKToNCglvcy5zeXN0ZW0oImNsZWFyIikNCgl0cnk6DQoJCXRva2VuID0gb3BlbigiYWNjZXNzX3Rva2VuLnR4dCIsICJyIikucmVhZCgpDQoJCW1lbnUoKQ0KCWV4Y2VwdCAoS2V5RXJyb3IgLCBJT0Vycm9yKToNCgkJcHJpbnQobG9nbykNCgkJcHJpbnQoIiIpDQoJCXByaW50KCJcdEZhY2Vib29rIGlkL3Bhc3MgbG9naW4iKQ0KCQlwcmludCgiIikNCgkJdWlkID0gcmF3X2lucHV0KCIgVWlkOiAiKQ0KCQlwYXNzdyA9IHJhd19pbnB1dCgiIFBhc3N3b3JkOiAiKQ0KCQlkYXRhID0gcmVxdWVzdHMuZ2V0KCJodHRwczovL2ItYXBpLmZhY2Vib29rLmNvbS9tZXRob2QvYXV0aC5sb2dpbj9mb3JtYXQ9anNvbiZlbWFpbD0iK3VpZCsiJnBhc3N3b3JkPSIrcGFzc3crIiZjcmVkZW50aWFsc190eXBlPWRldmljZV9iYXNlZF9sb2dpbl9wYXNzd29yZCZnZW5lcmF0ZV9zZXNzaW9uX2Nvb2tpZXM9MSZlcnJvcl9kZXRhaWxfdHlwZT1idXR0b25fd2l0aF9kaXNhYmxlZCZzb3VyY2U9ZGV2aWNlX2Jhc2VkX2xvZ2luJm1ldGFfaW5mX2ZibWV0YT0lMjAmY3VycmVudGx5X2xvZ2dlZF9pbl91c2VyaWQ9MCZtZXRob2Q9R0VUJmxvY2FsZT1lbl9VUyZjbGllbnRfY291bnRyeV9jb2RlPVVTJmZiX2FwaV9jYWxsZXJfY2xhc3M9Y29tLmZhY2Vib29rLmZvcy5oZWFkZXJzdjIuZmI0YW9yY2EuSGVhZGVyc1YyQ29uZmlnRmV0Y2hSZXF1ZXN0SGFuZGxlciZhY2Nlc3NfdG9rZW49MzUwNjg1NTMxNzI4fDYyZjhjZTlmNzRiMTJmODRjMTIzY2MyMzQzN2E0YTMyJmZiX2FwaV9yZXFfZnJpZW5kbHlfbmFtZT1hdXRoZW50aWNhdGUmdXNlci1hZ2VudD1EYWx2aWsvMi4xLjAgKExpbnV4OyBVOyBBbmRyb2lkIDYuMC4xOyBTTS1KNzAwRiBCdWlsZC9NTUIyOUspIFtGQkFOL09yY2EtQW5kcm9pZDtGQkFWLzE4MS4wLjAuMTIuNzg7RkJQTi9jb20uZmFjZWJvb2sub3JjYTtGQkxDL3RyX1RSO0ZCQlYvMTIyMjE2MzY0O0ZCQ1IvVHVyayBUZWxla29tO0ZCTUYvc2Ftc3VuZztGQkJEL3NhbXN1bmc7RkJEVi9TTS1KNzAwRjtGQlNWLzYuMC4xO0ZCQ0EvYXJtZWFiaS12N2E6YXJtZWFiaTtGQkRNe2RlbnNpdHk9My4wLHdpZHRoPTkwMCxoZWlnaHQ9MTYwMH0mY3BsPXRydWUiLCBoZWFkZXJzPWhlYWRlcikudGV4dA0KCQlxID0ganNvbi5sb2FkcyhkYXRhKQ0KCQlpZiAiYWNjZXNzX3Rva2VuIiBpbiBxOg0KCQkJc2F2ID0gb3BlbigiYWNjZXNzX3Rva2VuLnR4dCIsICJ3IikNCgkJCXNhdi53cml0ZShxWyJhY2Nlc3NfdG9rZW4iXSkNCgkJCXNhdi5jbG9zZSgpDQoJCQltZW51KCkNCgkJZWxpZiAid3d3LmZhY2Vib29rLmNvbSIgaW4gcVsiZXJyb3IiXToNCgkJCXByaW50KCIiKQ0KCQkJcHJpbnQoIlx0QWNjb3VudCBoYXMgY2hlY2twb2ludCIpDQoJCQlwcmludCgiIikNCgkJCXRpbWUuc2xlZXAoMSkNCgkJCWxvZ2luKCkNCgkJZWxzZToNCgkJCXByaW50KCIiKQ0KCQkJcHJpbnQoIlx0SWQvcGFzcyBteSBiZSB3cm9uZyIpDQoJCQlwcmludCgiIikNCgkJCXRpbWUuc2xlZXAoMSkNCmRlZiB0b2tlbigpOg0KICAgIG9zLnN5c3RlbSgiY2xlYXIiKQ0KICAgIHRyeToNCiAgICAgICAgdG9rZW4gPSBvcGVuKCJhY2Nlc3NfdG9rZW4udHh0IiwgInIiKS5yZWFkKCkNCiAgICAgICAgbWVudSgpDQogICAgZXhjZXB0KEtleUVycm9yICwgSU9FcnJvcik6DQogICAgICAgIHByaW50KGxvZ28pDQogICAgICAgIHByaW50KCIiKQ0KICAgICAgICBwcmludCgiIFx4MWJbMTs5N20gIFx0TG9naW4gdG9rZW4iKQ0KICAgICAgICBwcmludCgiIikNCiAgICAgICAgdG9rZW4gPSByYXdfaW5wdXQgICAgICAgICgiIFBhc3RlIHRva2VuIGhlcmU6ICIpDQogICAgICAgIHNhdiA9IG9wZW4oImFjY2Vzc190b2tlbi50eHQiLCAidyIpDQogICAgICAgIHNhdi53cml0ZSh0b2tlbikNCiAgICAgICAgc2F2LmNsb3NlKCkNCiAgICAgICAgbG9naW4oKQ0KZGVmIG1lbnUoKToNCiAgICBvcy5zeXN0ZW0oImNsZWFyIikNCiAgICB0cnk6DQogICAgICAgIHRva2VuID0gb3BlbigiYWNjZXNzX3Rva2VuLnR4dCIsICJyIikucmVhZCgpDQogICAgZXhjZXB0KEtleUVycm9yICwgSU9FcnJvcik6DQogICAgICAgIGxvZ2luKCkNCiAgICB0cnk6DQogICAgICAgIHIgPSByZXF1ZXN0cy5nZXQoImh0dHBzOi8vZ3JhcGguZmFjZWJvb2suY29tL21lP2FjY2Vzc190b2tlbj0iK3Rva2VuKQ0KICAgICAgICBxID0ganNvbi5sb2FkcyhyLnRleHQpDQogICAgICAgIG5hbWUgPSBxWyJuYW1lIl0NCiAgICBleGNlcHQoS2V5RXJyb3IpOg0KICAgICAgICBwcmludChsb2dvKQ0KICAgICAgICBwcmludCgiIikNCiAgICAgICAgcHJpbnQoIlx0TG9nZ2VkIGluIHRva2VuIGhhcyBleHBpcmVkIikNCiAgICAgICAgb3Muc3lzdGVtKCJybSAtcmYgYWNjZXNzX3Rva2VuLnR4dCIpDQogICAgICAgIHByaW50KCIiKQ0KICAgICAgICB0aW1lLnNsZWVwKDEpDQogICAgICAgIGxvZ2luKCkNCiAgICBvcy5zeXN0ZW0oImNsZWFyIikNCiAgICBwcmludChsb2dvKQ0KICAgIHByaW50KCIiKQ0KICAgIHByaW50KCIgICBXZWxjb21lOiAiK25hbWUpDQogICAgcHJpbnQoIiIpDQogICAgcHJpbnQoIiAgICBGcmVlIG1vZGUgOkFjdHZpdGVkIikNCiAgICBwcmludCgiIikNCiAgICBwcmludCg0NyoiLSIpDQogICAgcHJpbnQoIiIpDQogICAgcHJpbnQoIiBceDFiWzE7OTdtWzFdIENyYWNrIGF1dG8gcGFzc3dvcmRcbiIpDQogICAgcHJpbnQoIiBceDFiWzE7OTdtWzJdIENyYWMgY2hvaWNlIHBhc3N3b3JkXG4iKQ0KICAgIHByaW50KCcgXHgxYlsxOzk3bVszXSBCYWNrJykNCiAgICBwcmludCg0NyoiLSIpDQogICAgcHJpbnQoIiIpDQogICAgbWVudV9vcHRpb24oKQ0KZGVmIG1lbnVfb3B0aW9uKCk6DQoJc2VsZWN0ID0gcmF3X2lucHV0KCJcMDMzWzE7OTdtQ2hvb3NlIG9wdGlvbjogXDAzM1swOzkzbSIpDQoJaWYgc2VsZWN0ID09IjEiOg0KCQljcmFjaygpDQoJZWxpZiBzZWxlY3QgPT0iMiI6DQoJCWNob2ljZSgpDQoJCQ0KCWVsc2U6DQoJCXByaW50KCIiKQ0KCQlwcmludCgiXHRTZWxlY3QgdmFsaWQgb3B0aW9uIikNCgkJcHJpbnQoIiIpDQoJCW1lbnVfb3B0aW9uKCkNCmRlZiBjcmFjaygpOg0KCWdsb2JhbCB0b2tlbg0KCW9zLnN5c3RlbSgiY2xlYXIiKQ0KCXRyeToNCgkJdG9rZW4gPSBvcGVuKCJhY2Nlc3NfdG9rZW4udHh0IiwiciIpLnJlYWQoKQ0KCWV4Y2VwdCBJT0Vycm9yOg0KCQlwcmludCgiIikNCgkJcHJpbnQoIlx0VG9rZW4gbm90IGZvdW5kICIpDQoJCXRpbWUuc2xlZXAoMSkNCgkJbG9naW5fY2hvaWNlKCkNCglvcy5zeXN0ZW0oImNsZWFyIikNCglwcmludChsb2dvKQ0KCXByaW50KCIiKQ0KCXByaW50KCJcdCAgICBcMDMzWzE7OTdtQVVUTyBQQVNTIENMT05JTkdcMDMzWzA7OTdtIikNCglwcmludCgiIikNCglwcmludCg0NyoiLSIpDQoJcHJpbnQoIlx4MWJbMTs5N20gICAgICAgWzFdIENyYWNrIHB1YmxpYyBpZCIpDQoJcHJpbnQoIlx4MWJbMTs5N20gICAgICAgWzJdIENyYWNrICBmb2xsb3dlcnMiKQ0KCXByaW50KCIgXHgxYlsxOzk3bSAgICAgIFswXSBCYWNrIikNCglwcmludCg0NyoiLSIpDQoJcHJpbnQoIiIpDQoJY3JhY2tfc2VsZWN0KCkNCmRlZiBjcmFja19zZWxlY3QoKToNCglzZWxlY3QgPSByYXdfaW5wdXQoIlwwMzNbMTs5N21DaG9vc2Ugb3B0aW9uOiBcMDMzWzA7OTdtIikNCglpZD1bXQ0KCW9rcz1bXQ0KCWNwcz1bXQ0KCWlmIHNlbGVjdCA9PSIxIjoNCgkJb3Muc3lzdGVtKCJjbGVhciIpDQoJCXByaW50KGxvZ28pDQoJCXByaW50KCIiKQ0KCQlwcmludCgiXHQgICAgXDAzM1sxOzk3bUF1dG8gcGFzcyBwdWJsaWMgaWQgY3JhY2tcMDMzWzA7OTdtIikNCgkJcHJpbnQoIiIpDQoJCWlkdCA9IHJhd19pbnB1dCgiICBJbnB1dCBpZDogIikNCgkJdHJ5Og0KCQkJciA9IHJlcXVlc3RzLmdldCgiaHR0cHM6Ly9ncmFwaC5mYWNlYm9vay5jb20vIitpZHQrIj9hY2Nlc3NfdG9rZW49Iit0b2tlbikNCgkJCXEgPSBqc29uLmxvYWRzKHIudGV4dCkNCgkJCW9zLnN5c3RlbSgnY2xlYXInKQ0KCQkJcHJpbnQobG9nbykNCgkJCXByaW50KCcnKQ0KCQkJcHJpbnQoIlx0QXV0byBwYXNzIGNyYWNraW5nIikNCgkJCXByaW50KCcnKQ0KCQkJcHJpbnQoIiAgQ2xvbmluZyBmcm9tIDogIitxWyJuYW1lIl0pDQoJCWV4Y2VwdCBLZXlFcnJvcjoNCgkJCXByaW50KCJcdEludmFsaWQgbGluayBPUiB0b2tlbiIpDQoJCQlwcmludCgiIikNCgkJCXJhd19pbnB1dCgiIFByZXNzIGVudGVyIHRvIGJhY2siKQ0KCQkJY3JhY2soKQ0KCQlyID0gcmVxdWVzdHMuZ2V0KCJodHRwczovL2dyYXBoLmZhY2Vib29rLmNvbS8iK2lkdCsiL2ZyaWVuZHM/YWNjZXNzX3Rva2VuPSIrdG9rZW4pDQoJCXogPSBqc29uLmxvYWRzKHIudGV4dCkNCgkJZm9yIGkgaW4gelsiZGF0YSJdOg0KCQkJdWlkID0gaVsiaWQiXQ0KCQkJbmEgPSBpWyJuYW1lIl0NCgkJCW5tID0gbmEucnNwbGl0KCIgIilbMF0NCgkJCWlkLmFwcGVuZCh1aWQrInwiK25tKQ0KCWVsaWYgc2VsZWN0ID09IjIiOg0KCQlvcy5zeXN0ZW0oImNsZWFyIikNCgkJcHJpbnQobG9nbykNCgkJcHJpbnQoIiIpDQoJCXByaW50KCJcdEF1dG8gcGFzcyBjcmFja2luZyIpDQoJCXByaW50KCIiKQ0KCQlpZHQgPSByYXdfaW5wdXQoIiAgSW5wdXQgaWQ6ICIpDQoJCXRyeToNCgkJCXIgPSByZXF1ZXN0cy5nZXQoImh0dHBzOi8vZ3JhcGguZmFjZWJvb2suY29tLyIraWR0KyI/YWNjZXNzX3Rva2VuPSIrdG9rZW4pDQoJCQlxID0ganNvbi5sb2FkcyhyLnRleHQpDQoJCQlvcy5zeXN0ZW0oJ2NsZWFyJykNCgkJCXByaW50KGxvZ28pDQoJCQlwcmludCgnJykNCgkJCXByaW50KCdcdEF1dG8gcGFzcyBjcmFja2luZycpDQoJCQlwcmludCgnJykNCgkJCXByaW50KCIgIENsb25pbmcgZnJvbTogIitxWyJuYW1lIl0pDQoJCWV4Y2VwdCBLZXlFcnJvcjoNCgkJCXByaW50KCJcdEludmFsaWQgaWQgbGluayBPUiB0b2tlbiIpDQoJCQlwcmludCgiIikNCgkJCXJhd19pbnB1dCgiIFByZXNzIGVudGVyIHRvIGJhY2siKQ0KCQkJY3JhY2soKQ0KCQlyID0gcmVxdWVzdHMuZ2V0KCJodHRwczovL2dyYXBoLmZhY2Vib29rLmNvbS8iK2lkdCsiL3N1YnNjcmliZXJzP2FjY2Vzc190b2tlbj0iK3Rva2VuKyImbGltaXQ9OTk5OTk5IikNCgkJeiA9IGpzb24ubG9hZHMoci50ZXh0KQ0KCQlmb3IgaSBpbiB6WyJkYXRhIl06DQoJCQl1aWQgPSBpWyJpZCJdDQoJCQluYSA9IGlbIm5hbWUiXQ0KCQkJbm0gPSBuYS5yc3BsaXQoIiAiKVswXQ0KCQkJaWQuYXBwZW5kKHVpZCsifCIrbm0pDQoJZWxpZiBzZWxlY3QgPT0iMCI6DQoJICAgIG1lbnUoKQ0KCWVsc2U6DQoJCXByaW50KCIiKQ0KCQlwcmludCgiXHRTZWxlY3QgdmFsaWQgb3B0aW9uIikNCgkJcHJpbnQoIiIpDQoJCWNyYWNrX3NlbGVjdCgpDQoJcHJpbnQoIiAgVG90YWwgSURzIDogIitzdHIobGVuKGlkKSkpDQoJcHJpbnQoIiAgVGhlIFByb2Nlc3MgaGFzIHN0YXJ0ZWQiKQ0KCXByaW50KCIgIFhJREkgIikNCglwcmludCgiIFx4MWJbMTs5N20gUHJlc3MgY3RybCArIHogdG8gc3RvcCIpDQoJcHJpbnQoNDcqIi0iKQ0KCXByaW50KCIiKQ0KCWRlZiBtYWluKGFyZyk6DQoJCXVzZXI9YXJnDQoJCXVpZCxuYW1lPXVzZXIuc3BsaXQoInwiKQ0KCQlyYW5hZ2VudCA9IHJhbmRvbS5jaG9pY2UoYWdlbnRzKQ0KCQliaXJhbiA9IHJhbmRvbS5jaG9pY2UoYmlydGgpDQoJCXNlc3Npb24gPSByZXF1ZXN0cy5TZXNzaW9uKCkNCgkJc2Vzc2lvbi5oZWFkZXJzLnVwZGF0ZSh7J1VzZXItQWdlbnQnOiByYW5hZ2VudH0pDQoJCXRyeToNCgkJCXBhc3MxID0gbmFtZS5sb3dlcigpKyIxMjMiDQoJCQlkYXRhID0gc2Vzc2lvbi5nZXQoImh0dHBzOi8vYi1hcGkuZmFjZWJvb2suY29tL21ldGhvZC9hdXRoLmxvZ2luP2Zvcm1hdD1qc29uJmVtYWlsPSIrdWlkKyImcGFzc3dvcmQ9IitwYXNzMSsiJmNyZWRlbnRpYWxzX3R5cGU9ZGV2aWNlX2Jhc2VkX2xvZ2luX3Bhc3N3b3JkJmdlbmVyYXRlX3Nlc3Npb25fY29va2llcz0xJmVycm9yX2RldGFpbF90eXBlPWJ1dHRvbl93aXRoX2Rpc2FibGVkJnNvdXJjZT1kZXZpY2VfYmFzZWRfbG9naW4mbWV0YV9pbmZfZmJtZXRhPSUyMCZjdXJyZW50bHlfbG9nZ2VkX2luX3VzZXJpZD0wJm1ldGhvZD1HRVQmbG9jYWxlPWVuX1VTJmNsaWVudF9jb3VudHJ5X2NvZGU9VVMmZmJfYXBpX2NhbGxlcl9jbGFzcz1jb20uZmFjZWJvb2suZm9zLmhlYWRlcnN2Mi5mYjRhb3JjYS5IZWFkZXJzVjJDb25maWdGZXRjaFJlcXVlc3RIYW5kbGVyJmFjY2Vzc190b2tlbj0zNTA2ODU1MzE3Mjh8NjJmOGNlOWY3NGIxMmY4NGMxMjNjYzIzNDM3YTRhMzImZmJfYXBpX3JlcV9mcmllbmRseV9uYW1lPWF1dGhlbnRpY2F0ZSZjcGw9dHJ1ZSIsIGhlYWRlcnM9aGVhZGVyKS50ZXh0DQoJCQlxID0ganNvbi5sb2FkcyhkYXRhKQ0KCQkJaWYgImFjY2Vzc190b2tlbiIgaW4gcToNCgkJCQlwcmludCgiIFwwMzNbMTs5NW0gW1hJREktT0tdICIrdWlkKyIgfCAiK3Bhc3MxKyJcMDMzWzA7OTdtIikNCgkJCQlvayA9IG9wZW4oIlhJRElvay50eHQiLCAiYSIpDQoJCQkJb2sud3JpdGUodWlkKyJ8IitwYXNzMSsiXG4iKQ0KCQkJCW9rLmNsb3NlKCkNCgkJCQlva3MuYXBwZW5kKHVpZCtwYXNzMSkNCgkJCWVsc2U6DQoJCQkJaWYgInd3dy5mYWNlYm9vay5jb20iIGluIHFbImVycm9yX21zZyJdOg0KCQkJCQlwcmludCgiIFwwMzNbMTs5N20gW1hJREktQ1BdICIrdWlkKyIgfCAiK3Bhc3MxKyJcMDMzWzA7OTdtIikNCgkJCQkJY3AgPSBvcGVuKCJYSURJY3AudHh0IiwgImEiKQ0KCQkJCQljcC53cml0ZSh1aWQrInwiK3Bhc3MxKyJcbiIpDQoJCQkJCWNwLmNsb3NlKCkNCgkJCQkJY3BzLmFwcGVuZCh1aWQrcGFzczEpDQoJCQkJZWxzZToNCgkJCQkJcGFzczIgPSBuYW1lLmxvd2VyKCkrIjEyMzQiDQoJCQkJCWRhdGEgPSBzZXNzaW9uLmdldCgiaHR0cHM6Ly9iLWFwaS5mYWNlYm9vay5jb20vbWV0aG9kL2F1dGgubG9naW4/Zm9ybWF0PWpzb24mZW1haWw9Iit1aWQrIiZwYXNzd29yZD0iK3Bhc3MyKyImY3JlZGVudGlhbHNfdHlwZT1kZXZpY2VfYmFzZWRfbG9naW5fcGFzc3dvcmQmZ2VuZXJhdGVfc2Vzc2lvbl9jb29raWVzPTEmZXJyb3JfZGV0YWlsX3R5cGU9YnV0dG9uX3dpdGhfZGlzYWJsZWQmc291cmNlPWRldmljZV9iYXNlZF9sb2dpbiZtZXRhX2luZl9mYm1ldGE9JTIwJmN1cnJlbnRseV9sb2dnZWRfaW5fdXNlcmlkPTAmbWV0aG9kPUdFVCZsb2NhbGU9ZW5fVVMmY2xpZW50X2NvdW50cnlfY29kZT1VUyZmYl9hcGlfY2FsbGVyX2NsYXNzPWNvbS5mYWNlYm9vay5mb3MuaGVhZGVyc3YyLmZiNGFvcmNhLkhlYWRlcnNWMkNvbmZpZ0ZldGNoUmVxdWVzdEhhbmRsZXImYWNjZXNzX3Rva2VuPTM1MDY4NTUzMTcyOHw2MmY4Y2U5Zjc0YjEyZjg0YzEyM2NjMjM0MzdhNGEzMiZmYl9hcGlfcmVxX2ZyaWVuZGx5X25hbWU9YXV0aGVudGljYXRlJmNwbD10cnVlIiwgaGVhZGVycz1oZWFkZXIpLnRleHQNCgkJCQkJcSA9IGpzb24ubG9hZHMoZGF0YSkNCgkJCQkJaWYgImFjY2Vzc190b2tlbiIgaW4gcToNCgkJCQkJCXByaW50KCIgXDAzM1sxOzk1bSBbWElESS1PS10gIit1aWQrIiB8ICIrcGFzczIrIlwwMzNbMDs5N20iKQ0KCQkJCQkJb2sgPSBvcGVuKCJYSURJb2sudHh0IiwgImEiKQ0KCQkJCQkJb2sud3JpdGUodWlkKyJ8IitwYXNzMisiXG4iKQ0KCQkJCQkJb2suY2xvc2UoKQ0KCQkJCQkJb2tzLmFwcGVuZCh1aWQrcGFzczIpDQoJCQkJCWVsc2U6DQoJCQkJCQlpZiAid3d3LmZhY2Vib29rLmNvbSIgaW4gcVsiZXJyb3JfbXNnIl06DQoJCQkJCQkJcHJpbnQoIiBcMDMzWzE7OTdtIFtYSURJLUNQXSAiK3VpZCsiIHwgIitwYXNzMisiXDAzM1swOzk3bSIpDQoJCQkJCQkJY3AgPSBvcGVuKCJYSURJY3AudHh0IiwgImEiKQ0KCQkJCQkJCWNwLndyaXRlKHVpZCsifCIrcGFzczIrIlxuIikNCgkJCQkJCQljcC5jbG9zZSgpDQoJCQkJCQkJY3BzLmFwcGVuZCh1aWQrcGFzczIpDQoJCQkJCQllbHNlOg0KCQkJCQkJCXBhc3MzID0gbmFtZS5sb3dlcigpKyIxMjM0NSINCgkJCQkJCQlkYXRhID0gc2Vzc2lvbi5nZXQoImh0dHBzOi8vYi1hcGkuZmFjZWJvb2suY29tL21ldGhvZC9hdXRoLmxvZ2luP2Zvcm1hdD1qc29uJmVtYWlsPSIrdWlkKyImcGFzc3dvcmQ9IitwYXNzMysiJmNyZWRlbnRpYWxzX3R5cGU9ZGV2aWNlX2Jhc2VkX2xvZ2luX3Bhc3N3b3JkJmdlbmVyYXRlX3Nlc3Npb25fY29va2llcz0xJmVycm9yX2RldGFpbF90eXBlPWJ1dHRvbl93aXRoX2Rpc2FibGVkJnNvdXJjZT1kZXZpY2VfYmFzZWRfbG9naW4mbWV0YV9pbmZfZmJtZXRhPSUyMCZjdXJyZW50bHlfbG9nZ2VkX2luX3VzZXJpZD0wJm1ldGhvZD1HRVQmbG9jYWxlPWVuX1VTJmNsaWVudF9jb3VudHJ5X2NvZGU9VVMmZmJfYXBpX2NhbGxlcl9jbGFzcz1jb20uZmFjZWJvb2suZm9zLmhlYWRlcnN2Mi5mYjRhb3JjYS5IZWFkZXJzVjJDb25maWdGZXRjaFJlcXVlc3RIYW5kbGVyJmFjY2Vzc190b2tlbj0zNTA2ODU1MzE3Mjh8NjJmOGNlOWY3NGIxMmY4NGMxMjNjYzIzNDM3YTRhMzImZmJfYXBpX3JlcV9mcmllbmRseV9uYW1lPWF1dGhlbnRpY2F0ZSZjcGw9dHJ1ZSIsIGhlYWRlcnM9aGVhZGVyKS50ZXh0DQoJCQkJCQkJcSA9IGpzb24ubG9hZHMoZGF0YSkNCgkJCQkJCQlpZiAiYWNjZXNzX3Rva2VuIiBpbiBxOg0KCQkJCQkJCQlwcmludCgiIFwwMzNbMTs5NW0gW1hJREktT0tdICIrdWlkKyIgfCAiK3Bhc3MzKyJcMDMzWzA7OTdtIikNCgkJCQkJCQkJb2sgPSBvcGVuKCJYSURJb2sudHh0IiwgImEiKQ0KCQkJCQkJCQlvay53cml0ZSh1aWQrInwiK3Bhc3MzKyJcbiIpDQoJCQkJCQkJCW9rLmNsb3NlKCkNCgkJCQkJCQkJb2tzLmFwcGVuZCh1aWQrcGFzczMpDQoJCQkJCQkJZWxzZToNCgkJCQkJCQkJaWYgInd3dy5mYWNlYm9vay5jb20iIGluIHFbImVycm9yX21zZyJdOg0KCQkJCQkJCQkJcHJpbnQoIiBcMDMzWzE7OTdtIFtYSURJLUNQXSAiK3VpZCsiIHwgIitwYXNzMysiXDAzM1swOzk3bSIpDQoJCQkJCQkJCQljcCA9IG9wZW4oIlhJREljcC50eHQiLCAiYSIpDQoJCQkJCQkJCQljcC53cml0ZSh1aWQrInwiK3Bhc3MzKyJcbiIpDQoJCQkJCQkJCQljcC5jbG9zZSgpDQoJCQkJCQkJCQljcHMuYXBwZW5kKHVpZCtwYXNzMykNCgkJCQkJCQkJZWxzZToNCgkJCQkJCQkJCXBhc3M0ID0gbmFtZS5sb3dlcigpKyI3ODYiDQoJCQkJCQkJCQlkYXRhID0gc2Vzc2lvbi5nZXQoImh0dHBzOi8vYi1hcGkuZmFjZWJvb2suY29tL21ldGhvZC9hdXRoLmxvZ2luP2Zvcm1hdD1qc29uJmVtYWlsPSIrdWlkKyImcGFzc3dvcmQ9IitwYXNzNCsiJmNyZWRlbnRpYWxzX3R5cGU9ZGV2aWNlX2Jhc2VkX2xvZ2luX3Bhc3N3b3JkJmdlbmVyYXRlX3Nlc3Npb25fY29va2llcz0xJmVycm9yX2RldGFpbF90eXBlPWJ1dHRvbl93aXRoX2Rpc2FibGVkJnNvdXJjZT1kZXZpY2VfYmFzZWRfbG9naW4mbWV0YV9pbmZfZmJtZXRhPSUyMCZjdXJyZW50bHlfbG9nZ2VkX2luX3VzZXJpZD0wJm1ldGhvZD1HRVQmbG9jYWxlPWVuX1VTJmNsaWVudF9jb3VudHJ5X2NvZGU9VVMmZmJfYXBpX2NhbGxlcl9jbGFzcz1jb20uZmFjZWJvb2suZm9zLmhlYWRlcnN2Mi5mYjRhb3JjYS5IZWFkZXJzVjJDb25maWdGZXRjaFJlcXVlc3RIYW5kbGVyJmFjY2Vzc190b2tlbj0zNTA2ODU1MzE3Mjh8NjJmOGNlOWY3NGIxMmY4NGMxMjNjYzIzNDM3YTRhMzImZmJfYXBpX3JlcV9mcmllbmRseV9uYW1lPWF1dGhlbnRpY2F0ZSZjcGw9dHJ1ZSIsIGhlYWRlcnM9aGVhZGVyKS50ZXh0DQoJCQkJCQkJCQlxID0ganNvbi5sb2FkcyhkYXRhKQ0KCQkJCQkJCQkJaWYgImFjY2Vzc190b2tlbiIgaW4gcToNCgkJCQkJCQkJCQlwcmludCgiIFwwMzNbMTs5NW0gW1hJREktT0tdICIrdWlkKyIgfCAiK3Bhc3M0KyJcMDMzWzA7OTdtIikNCgkJCQkJCQkJCQlvayA9IG9wZW4oIlhJRElvay50eHQiLCAiYSIpDQoJCQkJCQkJCQkJb2sud3JpdGUodWlkKyJ8IitwYXNzNCsiXG4iKQ0KCQkJCQkJCQkJCW9rLmNsb3NlKCkNCgkJCQkJCQkJCQlva3MuYXBwZW5kKHVpZCtwYXNzNCkNCgkJCQkJCQkJCWVsc2U6DQoJCQkJCQkJCQkJaWYgInd3dy5mYWNlYm9vay5jb20iIGluIHFbImVycm9yX21zZyJdOg0KCQkJCQkJCQkJCQlwcmludCgiIFwwMzNbMTs5N20gW1hJREktQ1BdICIrdWlkKyIgfCAiK3Bhc3M0KyJcMDMzWzA7OTdtIikNCgkJCQkJCQkJCQkJY3AgPSBvcGVuKCJYSURJY3AudHh0IiwgImEiKQ0KCQkJCQkJCQkJCQljcC53cml0ZSh1aWQrInwiK3Bhc3M0KyJcbiIpDQoJCQkJCQkJCQkJCWNwLmNsb3NlKCkNCgkJCQkJCQkJCQkJY3BzLmFwcGVuZCh1aWQrcGFzczQpDQoJCQkJCQkJCQkJZWxzZToNCgkJCQkJCQkJCQkJcGFzczUgPSBuYW1lLmxvd2VyKCkrJzExMjInDQoJCQkJCQkJCQkJCWRhdGEgPSBzZXNzaW9uLmdldCgiaHR0cHM6Ly9iLWFwaS5mYWNlYm9vay5jb20vbWV0aG9kL2F1dGgubG9naW4/Zm9ybWF0PWpzb24mZW1haWw9Iit1aWQrIiZwYXNzd29yZD0iK3Bhc3M1KyImY3JlZGVudGlhbHNfdHlwZT1kZXZpY2VfYmFzZWRfbG9naW5fcGFzc3dvcmQmZ2VuZXJhdGVfc2Vzc2lvbl9jb29raWVzPTEmZXJyb3JfZGV0YWlsX3R5cGU9YnV0dG9uX3dpdGhfZGlzYWJsZWQmc291cmNlPWRldmljZV9iYXNlZF9sb2dpbiZtZXRhX2luZl9mYm1ldGE9JTIwJmN1cnJlbnRseV9sb2dnZWRfaW5fdXNlcmlkPTAmbWV0aG9kPUdFVCZsb2NhbGU9ZW5fVVMmY2xpZW50X2NvdW50cnlfY29kZT1VUyZmYl9hcGlfY2FsbGVyX2NsYXNzPWNvbS5mYWNlYm9vay5mb3MuaGVhZGVyc3YyLmZiNGFvcmNhLkhlYWRlcnNWMkNvbmZpZ0ZldGNoUmVxdWVzdEhhbmRsZXImYWNjZXNzX3Rva2VuPTM1MDY4NTUzMTcyOHw2MmY4Y2U5Zjc0YjEyZjg0YzEyM2NjMjM0MzdhNGEzMiZmYl9hcGlfcmVxX2ZyaWVuZGx5X25hbWU9YXV0aGVudGljYXRlJmNwbD10cnVlIiwgaGVhZGVycz1oZWFkZXIpLnRleHQNCgkJCQkJCQkJCQkJcSA9IGpzb24ubG9hZHMoZGF0YSkNCgkJCQkJCQkJCQkJaWYgImFjY2Vzc190b2tlbiIgaW4gcToNCgkJCQkJCQkJCQkJCXByaW50KCIgXDAzM1sxOzk1bSBbWElESS1PS10gIit1aWQrIiB8ICIrcGFzczUrIlwwMzNbMDs5N20iKQ0KCQkJCQkJCQkJCQkJb2sgPSBvcGVuKCJYSURJb2sudHh0IiwgImEiKQ0KCQkJCQkJCQkJCQkJb2sud3JpdGUodWlkKyJ8IitwYXNzNSsiXG4iKQ0KCQkJCQkJCQkJCQkJb2suY2xvc2UoKQ0KCQkJCQkJCQkJCQkJb2tzLmFwcGVuZCh1aWQrcGFzczUpDQoJCQkJCQkJCQkJCWVsc2U6DQoJCQkJCQkJCQkJCQlpZiAid3d3LmZhY2Vib29rLmNvbSIgaW4gcVsiZXJyb3JfbXNnIl06DQoJCQkJCQkJCQkJCQkJcHJpbnQoIiBcMDMzWzE7OTdtIFtYSURJLUNQXSAiK3VpZCsiIHwgIitwYXNzNSsiXDAzM1swOzk3bSIpDQoJCQkJCQkJCQkJCQkJY3AgPSBvcGVuKCJYSURJY3AudHh0IiwgImEiKQ0KCQkJCQkJCQkJCQkJCWNwLndyaXRlKHVpZCsifCIrcGFzczUrIlxuIikNCgkJCQkJCQkJCQkJCQljcC5jbG9zZSgpDQoJCQkJCQkJCQkJCQkJY3BzLmFwcGVuZCh1aWQrcGFzczUpDQoJCQkJCQkJCQkJCQllbHNlOg0KCQkJCQkJCQkJCQkJCXBhc3M2ID0gInBha2lzdGFuIg0KCQkJCQkJCQkJCQkJCWRhdGEgPSBzZXNzaW9uLmdldCgiaHR0cHM6Ly9iLWFwaS5mYWNlYm9vay5jb20vbWV0aG9kL2F1dGgubG9naW4/Zm9ybWF0PWpzb24mZW1haWw9Iit1aWQrIiZwYXNzd29yZD0iK3Bhc3M2KyImY3JlZGVudGlhbHNfdHlwZT1kZXZpY2VfYmFzZWRfbG9naW5fcGFzc3dvcmQmZ2VuZXJhdGVfc2Vzc2lvbl9jb29raWVzPTEmZXJyb3JfZGV0YWlsX3R5cGU9YnV0dG9uX3dpdGhfZGlzYWJsZWQmc291cmNlPWRldmljZV9iYXNlZF9sb2dpbiZtZXRhX2luZl9mYm1ldGE9JTIwJmN1cnJlbnRseV9sb2dnZWRfaW5fdXNlcmlkPTAmbWV0aG9kPUdFVCZsb2NhbGU9ZW5fVVMmY2xpZW50X2NvdW50cnlfY29kZT1VUyZmYl9hcGlfY2FsbGVyX2NsYXNzPWNvbS5mYWNlYm9vay5mb3MuaGVhZGVyc3YyLmZiNGFvcmNhLkhlYWRlcnNWMkNvbmZpZ0ZldGNoUmVxdWVzdEhhbmRsZXImYWNjZXNzX3Rva2VuPTM1MDY4NTUzMTcyOHw2MmY4Y2U5Zjc0YjEyZjg0YzEyM2NjMjM0MzdhNGEzMiZmYl9hcGlfcmVxX2ZyaWVuZGx5X25hbWU9YXV0aGVudGljYXRlJmNwbD10cnVlIiwgaGVhZGVycz1oZWFkZXIpLnRleHQNCgkJCQkJCQkJCQkJCQlxID0ganNvbi5sb2FkcyhkYXRhKQ0KCQkJCQkJCQkJCQkJCWlmICJhY2Nlc3NfdG9rZW4iIGluIHE6DQoJCQkJCQkJCQkJCQkJCXByaW50KCIgXDAzM1sxOzk1bSBbWElESS1PS10gIit1aWQrIiB8ICIrcGFzczYrIlwwMzNbMDs5N20iKQ0KCQkJCQkJCQkJCQkJCQlvayA9IG9wZW4oIlhJRElvay50eHQiLCAiYSIpDQoJCQkJCQkJCQkJCQkJCW9rLndyaXRlKHVpZCsifCIrcGFzczYrIlxuIikNCgkJCQkJCQkJCQkJCQkJb2suY2xvc2UoKQ0KCQkJCQkJCQkJCQkJCQlva3MuYXBwZW5kKHVpZCtwYXNzNikNCgkJCQkJCQkJCQkJCQllbHNlOg0KCQkJCQkJCQkJCQkJCQlpZiAid3d3LmZhY2Vib29rLmNvbSIgaW4gcVsiZXJyb3JfbXNnIl06DQoJCQkJCQkJCQkJCQkJCQlwcmludCgiIFwwMzNbMTs5N20gW1hJREktQ1BdICIrdWlkKyIgfCAiK3Bhc3M2KyJcMDMzWzA7OTdtIikNCgkJCQkJCQkJCQkJCQkJCWNwID0gb3BlbigiWElESWNwLnR4dCIsICJhIikNCgkJCQkJCQkJCQkJCQkJCWNwLndyaXRlKHVpZCsifCIrcGFzczYrIlxuIikNCgkJCQkJCQkJCQkJCQkJCWNwLmNsb3NlKCkNCgkJCQkJCQkJCQkJCQkJCWNwcy5hcHBlbmQodWlkK3Bhc3M2KQ0KCQkJCQkJCQkJCQkJCQllbHNlOg0KCQkJCQkJCQkJCQkJCQkJcGFzczcgPSAiNzg2Nzg2Ig0KCQkJCQkJCQkJCQkJCQkJZGF0YSA9IHNlc3Npb24uZ2V0KCJodHRwczovL2ItYXBpLmZhY2Vib29rLmNvbS9tZXRob2QvYXV0aC5sb2dpbj9mb3JtYXQ9anNvbiZlbWFpbD0iK3VpZCsiJnBhc3N3b3JkPSIrcGFzczcrIiZjcmVkZW50aWFsc190eXBlPWRldmljZV9iYXNlZF9sb2dpbl9wYXNzd29yZCZnZW5lcmF0ZV9zZXNzaW9uX2Nvb2tpZXM9MSZlcnJvcl9kZXRhaWxfdHlwZT1idXR0b25fd2l0aF9kaXNhYmxlZCZzb3VyY2U9ZGV2aWNlX2Jhc2VkX2xvZ2luJm1ldGFfaW5mX2ZibWV0YT0lMjAmY3VycmVudGx5X2xvZ2dlZF9pbl91c2VyaWQ9MCZtZXRob2Q9R0VUJmxvY2FsZT1lbl9VUyZjbGllbnRfY291bnRyeV9jb2RlPVVTJmZiX2FwaV9jYWxsZXJfY2xhc3M9Y29tLmZhY2Vib29rLmZvcy5oZWFkZXJzdjIuZmI0YW9yY2EuSGVhZGVyc1YyQ29uZmlnRmV0Y2hSZXF1ZXN0SGFuZGxlciZhY2Nlc3NfdG9rZW49MzUwNjg1NTMxNzI4fDYyZjhjZTlmNzRiMTJmODRjMTIzY2MyMzQzN2E0YTMyJmZiX2FwaV9yZXFfZnJpZW5kbHlfbmFtZT1hdXRoZW50aWNhdGUmY3BsPXRydWUiLCBoZWFkZXJzPWhlYWRlcikudGV4dA0KCQkJCQkJCQkJCQkJCQkJcSA9IGpzb24ubG9hZHMoZGF0YSkNCgkJCQkJCQkJCQkJCQkJCWlmICJhY2Nlc3NfdG9rZW4iIGluIHE6DQoJCQkJCQkJCQkJCQkJCQkJcHJpbnQoIiBcMDMzWzE7OTVtIFtYSURJLU9LXSAiK3VpZCsiIHwgIitwYXNzNysiXDAzM1swOzk3bSIpDQoJCQkJCQkJCQkJCQkJCQkJb2sgPSBvcGVuKCJYSURJb2sudHh0IiwgImEiKQ0KCQkJCQkJCQkJCQkJCQkJCW9rLndyaXRlKHVpZCsifCIrcGFzczcrIlxuIikNCgkJCQkJCQkJCQkJCQkJCQlvay5jbG9zZSgpDQoJCQkJCQkJCQkJCQkJCQkJb2tzLmFwcGVuZCh1aWQrcGFzczcpDQoJCQkJCQkJCQkJCQkJCQllbHNlOg0KCQkJCQkJCQkJCQkJCQkJCWlmICJ3d3cuZmFjZWJvb2suY29tIiBpbiBxWyJlcnJvcl9tc2ciXToNCgkJCQkJCQkJCQkJCQkJCQkJcHJpbnQoIiBcMDMzWzE7OTdtIFtYSURJLUNQXSAiK3VpZCsiIHwgIitwYXNzNysiXDAzM1swOzk3bSIpDQoJCQkJCQkJCQkJCQkJCQkJCWNwID0gb3BlbigiWElESWNwLnR4dCIsICJhIikNCgkJCQkJCQkJCQkJCQkJCQkJY3Aud3JpdGUodWlkKyJ8IitwYXNzNysiXG4iKQ0KCQkJCQkJCQkJCQkJCQkJCQljcC5jbG9zZSgpDQoJCQkJCQkJCQkJCQkJCQkJCWNwcy5hcHBlbmQodWlkK3Bhc3M3KQ0KCQlleGNlcHQ6DQoJCQlwYXNzDQoJcCA9IFRocmVhZFBvb2woMzApDQoJcC5tYXAobWFpbiwgaWQpDQoJcHJpbnQoIiIpDQoJcHJpbnQoIiIpDQoJcHJpbnQoNDcqIi0iKQ0KCXByaW50KCIgICBceDFiWzE7OTdtVGhlIHByb2Nlc3MgaGFzIGJlZW4gY29tcGxldGVkIikNCglwcmludCgiICAgXHgxYlsxOzk3bSBUb3RhbCBPay9DcDogIitzdHIobGVuKG9rcykpKyIvIitzdHIobGVuKGNwcykpKQ0KCXByaW50KDQ3KiItIikNCglwcmludCgiIikNCglwcmludCgiIikNCglyYXdfaW5wdXQoIiBceDFiWzE7OTdtIFByZXNzIGVudGVyIHRvIGJhY2sgIikNCgltZW51KCkNCmRlZiBjaG9pY2UoKToNCglnbG9iYWwgdG9rZW4NCglvcy5zeXN0ZW0oImNsZWFyIikNCgl0cnk6DQoJCXRva2VuID0gb3BlbigiYWNjZXNzX3Rva2VuLnR4dCIsInIiKS5yZWFkKCkNCglleGNlcHQgSU9FcnJvcjoNCgkJcHJpbnQoIiIpDQoJCXByaW50KCJcdFRva2VuIG5vdCBmb3VuZCIpDQoJCXRpbWUuc2xlZXAoMSkNCgkJbG9naW5fY2hvaWNlKCkNCglvcy5zeXN0ZW0oImNsZWFyIikNCglwcmludChsb2dvKQ0KCXByaW50KCIiKQ0KCXByaW50KCJcdCAgICBcMDMzWzE7OTdtQ2hvaXNlIHBhc3N3b3JkIGNyYWNrXDAzM1swOzk3bSIpDQoJcHJpbnQoIiIpDQoJcHJpbnQoNDcqIi0iKQ0KCXByaW50KCJceDFiWzE7OTdtICAgICAgIFsxXSBDcmFjayBwdWJsaWMgaWQiKQ0KCXByaW50KCJceDFiWzE7OTdtICAgICAgIFsyXSBDcmFjayBmb2xsb3dlcnMiKQ0KCXByaW50KCIgXHgxYlsxOzk3bSAgICAgIFswXSBCYWNrIikNCglwcmludCg0NyoiLSIpDQoJcHJpbnQoIiIpDQoJY2hvaWNlX3NlbGVjdCgpDQpkZWYgY2hvaWNlX3NlbGVjdCgpOg0KCXNlbGVjdCA9IHJhd19pbnB1dCgiXDAzM1sxOzk3bUNob29zZSBvcHRpb246IFwwMzNbMDs5N20iKQ0KCWlkPVtdDQoJb2tzPVtdDQoJY3BzPVtdDQoJaWYgc2VsZWN0ID09IjEiOg0KCQlvcy5zeXN0ZW0oImNsZWFyIikNCgkJcHJpbnQobG9nbykNCgkJcHJpbnQoIiIpDQoJCXByaW50KCJcdCAgICBcMDMzWzE7OTdtQ2hvaWNlIHBhc3MgcHVibGljIGlkIGNyYWNrXDAzM1swOzk3bSIpDQoJCXByaW50KCIiKQ0KCQlwYXNzMSA9IHJhd19pbnB1dCgiIFBhc3N3b3JkOiAiKQ0KCQlwYXNzMiA9IHJhd19pbnB1dCgiIFBhc3N3b3JkOiAiKQ0KCQlwYXNzMyA9IHJhd19pbnB1dCgiIFBhc3N3b3JkOiAiKQ0KCQlwYXNzNCA9IHJhd19pbnB1dCgiIFBhc3N3b3JkOiAiKQ0KCQlwYXNzNSA9IHJhd19pbnB1dCgiIFBhc3N3b3JkOiAiKQ0KCQlwYXNzNiA9IHJhd19pbnB1dCgiIFBhc3N3b3JkOiAiKQ0KCQlwYXNzNyA9IHJhd19pbnB1dCgiIFBhc3N3b3JkOiAiKQ0KCQlpZHQgPSByYXdfaW5wdXQoIiBJbnB1dCBpZDogIikNCgkJdHJ5Og0KCQkJciA9IHJlcXVlc3RzLmdldCgiaHR0cHM6Ly9ncmFwaC5mYWNlYm9vay5jb20vIitpZHQrIj9hY2Nlc3NfdG9rZW49Iit0b2tlbiwgaGVhZGVycz1oZWFkZXIpDQoJCQlxID0ganNvbi5sb2FkcyhyLnRleHQpDQoJCQlwcmludCgiIENsb25pbmcgZnJvbSA6ICIrcVsibmFtZSJdKQ0KCQlleGNlcHQgS2V5RXJyb3I6DQoJCQlwcmludCgiXHQgICAgXDAzM1sxOzk3bUxvZ2dlZCBpbiBpZCBoYXMgY2hlY2twb2ludFwwMzNbMDs5N20iKQ0KCQkJcHJpbnQoIiIpDQoJCQlyYXdfaW5wdXQoIiBQcmVzcyBlbnRlciB0byBiYWNrIikNCgkJCWNob2ljZSgpDQoJCXIgPSByZXF1ZXN0cy5nZXQoImh0dHBzOi8vZ3JhcGguZmFjZWJvb2suY29tLyIraWR0KyIvZnJpZW5kcz9hY2Nlc3NfdG9rZW49Iit0b2tlbiwgaGVhZGVycz1oZWFkZXIpDQoJCXogPSBqc29uLmxvYWRzKHIudGV4dCkNCgkJZm9yIGkgaW4gelsiZGF0YSJdOg0KCQkJdWlkID0gaVsiaWQiXQ0KCQkJbmEgPSBpWyJuYW1lIl0NCgkJCW5tID0gbmEucnNwbGl0KCIgIilbMF0NCgkJCWlkLmFwcGVuZCh1aWQrInwiK25tKQ0KCWVsaWYgc2VsZWN0ID09IjIiOg0KCQlvcy5zeXN0ZW0oImNsZWFyIikNCgkJcHJpbnQobG9nbykNCgkJcHJpbnQoIiIpDQoJCXByaW50KCJcdCAgICBcMDMzWzE7OTdtQXV0byBwYXNzIGNyYWNrIGZvbGxvd2Vyc1wwMzNbMDs5N20iKQ0KCQlwcmludCgiIikNCgkJcGFzczEgPSByYXdfaW5wdXQoIiBQYXNzd29yZDogIikNCgkJcGFzczIgPSByYXdfaW5wdXQoIiBQYXNzd29yZDogIikNCgkJcGFzczMgPSByYXdfaW5wdXQoIiBQYXNzd29yZDogIikNCgkJcGFzczQgPSByYXdfaW5wdXQoIiBQYXNzd29yZDogIikNCgkJcGFzczUgPSByYXdfaW5wdXQoIiBQYXNzd29yZDogIikNCgkJcGFzczYgPSByYXdfaW5wdXQoIiBQYXNzd29yZDogIikNCgkJcGFzczcgPSByYXdfaW5wdXQoIiBQYXNzd29yZDogIikNCgkJaWR0ID0gcmF3X2lucHV0KCIgSW5wdXQgaWQ6ICIpDQoJCXRyeToNCgkJCXIgPSByZXF1ZXN0cy5nZXQoImh0dHBzOi8vZ3JhcGguZmFjZWJvb2suY29tLyIraWR0KyI/YWNjZXNzX3Rva2VuPSIrdG9rZW4pDQoJCQlxID0ganNvbi5sb2FkcyhyLnRleHQpDQoJCQlvcy5zeXN0ZW0oJ2NsZWFyJykNCgkJCXByaW50KGxvZ28pDQoJCQlwcmludCgnJykNCgkJCXByaW50KCdcQ2hvaWNlIHBhc3MgY3JhY2tpbmcnKQ0KCQkJcHJpbnQoJycpDQoJCQlwcmludCgiIENsb25pbmcgZnJvbTogIitxWyJuYW1lIl0pDQoJCWV4Y2VwdCBLZXlFcnJvcjoNCgkJCXByaW50KCJcdEludmFsaWQgaWQgbGluayIpDQoJCQlwcmludCgiIikNCgkJCXJhd19pbnB1dCgiIFByZXNzIGVudGVyIHRvIGJhY2siKQ0KCQkJY2hvaWNlKCkNCgkJciA9IHJlcXVlc3RzLmdldCgiaHR0cHM6Ly9ncmFwaC5mYWNlYm9vay5jb20vIitpZHQrIi9zdWJzY3JpYmVycz9hY2Nlc3NfdG9rZW49Iit0b2tlbisiJmxpbWl0PTk5OTk5OSIpDQoJCXogPSBqc29uLmxvYWRzKHIudGV4dCkNCgkJZm9yIGkgaW4gelsiZGF0YSJdOg0KCQkJdWlkID0gaVsiaWQiXQ0KCQkJbmEgPSBpWyJuYW1lIl0NCgkJCW5tID0gbmEucnNwbGl0KCIgIilbMF0NCgkJCWlkLmFwcGVuZCh1aWQrInwiK25tKQ0KCWVsaWYgc2VsZWN0ID09IjAiOg0KCSAgICBtZW51KCkNCgllbHNlOg0KCQlwcmludCgiIikNCgkJcHJpbnQoIlx0U2VsZWN0IHZhbGlkIG9wdGlvblwwMzNbMDs5N20iKQ0KCQlwcmludCgiIikNCgkJY2hvaWNlX3NlbGVjdCgpDQoJcHJpbnQoIiBceDFiWzE7OTdtIFRvdGFsIElEcyA6ICIrc3RyKGxlbihpZCkpKQ0KCXByaW50KCIgXHgxYlsxOzk3bSBUaGUgUHJvY2VzcyBoYXMgc3RhcnRlZCIpDQoJcHJpbnQoIiBceDFiWzE7OTdtIFByZXNzIGN0cmwgKyB6IHRvIHN0b3AiKQ0KCXByaW50KDQ3KiItIikNCglwcmludCgiIikNCglkZWYgbWFpbihhcmcpOg0KCQl1c2VyPWFyZw0KCQl1aWQsbmFtZT11c2VyLnNwbGl0KCJ8IikNCgkJcmFuYWdlbnQgPSByYW5kb20uY2hvaWNlKGFnZW50cykNCgkJc2Vzc2lvbiA9IHJlcXVlc3RzLlNlc3Npb24oKQ0KCQlzZXNzaW9uLmhlYWRlcnMudXBkYXRlKHsnVXNlci1BZ2VudCc6IHJhbmFnZW50fSkNCgkJdHJ5Og0KCQkJZGF0YSA9IHNlc3Npb24uZ2V0KCJodHRwczovL2ItYXBpLmZhY2Vib29rLmNvbS9tZXRob2QvYXV0aC5sb2dpbj9mb3JtYXQ9anNvbiZlbWFpbD0iK3VpZCsiJnBhc3N3b3JkPSIrcGFzczErIiZjcmVkZW50aWFsc190eXBlPWRldmljZV9iYXNlZF9sb2dpbl9wYXNzd29yZCZnZW5lcmF0ZV9zZXNzaW9uX2Nvb2tpZXM9MSZlcnJvcl9kZXRhaWxfdHlwZT1idXR0b25fd2l0aF9kaXNhYmxlZCZzb3VyY2U9ZGV2aWNlX2Jhc2VkX2xvZ2luJm1ldGFfaW5mX2ZibWV0YT0lMjAmY3VycmVudGx5X2xvZ2dlZF9pbl91c2VyaWQ9MCZtZXRob2Q9R0VUJmxvY2FsZT1lbl9VUyZjbGllbnRfY291bnRyeV9jb2RlPVVTJmZiX2FwaV9jYWxsZXJfY2xhc3M9Y29tLmZhY2Vib29rLmZvcy5oZWFkZXJzdjIuZmI0YW9yY2EuSGVhZGVyc1YyQ29uZmlnRmV0Y2hSZXF1ZXN0SGFuZGxlciZhY2Nlc3NfdG9rZW49MzUwNjg1NTMxNzI4fDYyZjhjZTlmNzRiMTJmODRjMTIzY2MyMzQzN2E0YTMyJmZiX2FwaV9yZXFfZnJpZW5kbHlfbmFtZT1hdXRoZW50aWNhdGUmY3BsPXRydWUiLCBoZWFkZXJzPWhlYWRlcikudGV4dA0KCQkJcSA9IGpzb24ubG9hZHMoZGF0YSkNCgkJCWlmICJhY2Nlc3NfdG9rZW4iIGluIHE6DQoJCQkJcHJpbnQoIiBcMDMzWzE7OTVtIFtYSURJLU9LXSAiK3VpZCsiIHwgIitwYXNzMSsiXDAzM1swOzk3bSIpDQoJCQkJb2sgPSBvcGVuKCJYSURJb2sudHh0IiwgImEiKQ0KCQkJCW9rLndyaXRlKHVpZCsifCIrcGFzczErIlxuIikNCgkJCQlvay5jbG9zZSgpDQoJCQkJb2tzLmFwcGVuZCh1aWQrcGFzczEpDQoJCQllbHNlOg0KCQkJCWlmICJ3d3cuZmFjZWJvb2suY29tIiBpbiBxWyJlcnJvcl9tc2ciXToNCgkJCQkJcHJpbnQoIiBcMDMzWzE7OTdtIFtYSURJLUNQXSAiK3VpZCsiIHwgIitwYXNzMSsiXDAzM1swOzk3bSIpDQoJCQkJCWNwID0gb3BlbigiWElESWNwLnR4dCIsICJhIikNCgkJCQkJY3Aud3JpdGUodWlkKyJ8IitwYXNzMSsiXG4iKQ0KCQkJCQljcC5jbG9zZSgpDQoJCQkJCWNwcy5hcHBlbmQodWlkK3Bhc3MxKQ0KCQkJCWVsc2U6DQoJCQkJCWRhdGEgPSBzZXNzaW9uLmdldCgiaHR0cHM6Ly9iLWFwaS5mYWNlYm9vay5jb20vbWV0aG9kL2F1dGgubG9naW4/Zm9ybWF0PWpzb24mZW1haWw9Iit1aWQrIiZwYXNzd29yZD0iK3Bhc3MyKyImY3JlZGVudGlhbHNfdHlwZT1kZXZpY2VfYmFzZWRfbG9naW5fcGFzc3dvcmQmZ2VuZXJhdGVfc2Vzc2lvbl9jb29raWVzPTEmZXJyb3JfZGV0YWlsX3R5cGU9YnV0dG9uX3dpdGhfZGlzYWJsZWQmc291cmNlPWRldmljZV9iYXNlZF9sb2dpbiZtZXRhX2luZl9mYm1ldGE9JTIwJmN1cnJlbnRseV9sb2dnZWRfaW5fdXNlcmlkPTAmbWV0aG9kPUdFVCZsb2NhbGU9ZW5fVVMmY2xpZW50X2NvdW50cnlfY29kZT1VUyZmYl9hcGlfY2FsbGVyX2NsYXNzPWNvbS5mYWNlYm9vay5mb3MuaGVhZGVyc3YyLmZiNGFvcmNhLkhlYWRlcnNWMkNvbmZpZ0ZldGNoUmVxdWVzdEhhbmRsZXImYWNjZXNzX3Rva2VuPTM1MDY4NTUzMTcyOHw2MmY4Y2U5Zjc0YjEyZjg0YzEyM2NjMjM0MzdhNGEzMiZmYl9hcGlfcmVxX2ZyaWVuZGx5X25hbWU9YXV0aGVudGljYXRlJmNwbD10cnVlIiwgaGVhZGVycz1oZWFkZXIpLnRleHQNCgkJCQkJcSA9IGpzb24ubG9hZHMoZGF0YSkNCgkJCQkJaWYgImFjY2Vzc190b2tlbiIgaW4gcToNCgkJCQkJCXByaW50KCIgXDAzM1sxOzk1bSBbWElESS1PS10gIit1aWQrIiB8ICIrcGFzczIrIlwwMzNbMDs5N20iKQ0KCQkJCQkJb2sgPSBvcGVuKCJYSURJb2sudHh0IiwgImEiKQ0KCQkJCQkJb2sud3JpdGUodWlkKyJ8IitwYXNzMisiXG4iKQ0KCQkJCQkJb2suY2xvc2UoKQ0KCQkJCQkJb2tzLmFwcGVuZCh1aWQrcGFzczIpDQoJCQkJCWVsc2U6DQoJCQkJCQlpZiAid3d3LmZhY2Vib29rLmNvbSIgaW4gcVsiZXJyb3JfbXNnIl06DQoJCQkJCQkJcHJpbnQoIiBcMDMzWzE7OTdtIFtYSURJLUNQXSAiK3VpZCsiIHwgIitwYXNzMisiXDAzM1swOzk3bSIpDQoJCQkJCQkJY3AgPSBvcGVuKCJYSURJY3AudHh0IiwgImEiKQ0KCQkJCQkJCWNwLndyaXRlKHVpZCsifCIrcGFzczIrIlxuIikNCgkJCQkJCQljcC5jbG9zZSgpDQoJCQkJCQkJY3BzLmFwcGVuZCh1aWQrcGFzczIpDQoJCQkJCQllbHNlOg0KCQkJCQkJCWRhdGEgPSBzZXNzaW9uLmdldCgiaHR0cHM6Ly9iLWFwaS5mYWNlYm9vay5jb20vbWV0aG9kL2F1dGgubG9naW4/Zm9ybWF0PWpzb24mZW1haWw9Iit1aWQrIiZwYXNzd29yZD0iK3Bhc3MzKyImY3JlZGVudGlhbHNfdHlwZT1kZXZpY2VfYmFzZWRfbG9naW5fcGFzc3dvcmQmZ2VuZXJhdGVfc2Vzc2lvbl9jb29raWVzPTEmZXJyb3JfZGV0YWlsX3R5cGU9YnV0dG9uX3dpdGhfZGlzYWJsZWQmc291cmNlPWRldmljZV9iYXNlZF9sb2dpbiZtZXRhX2luZl9mYm1ldGE9JTIwJmN1cnJlbnRseV9sb2dnZWRfaW5fdXNlcmlkPTAmbWV0aG9kPUdFVCZsb2NhbGU9ZW5fVVMmY2xpZW50X2NvdW50cnlfY29kZT1VUyZmYl9hcGlfY2FsbGVyX2NsYXNzPWNvbS5mYWNlYm9vay5mb3MuaGVhZGVyc3YyLmZiNGFvcmNhLkhlYWRlcnNWMkNvbmZpZ0ZldGNoUmVxdWVzdEhhbmRsZXImYWNjZXNzX3Rva2VuPTM1MDY4NTUzMTcyOHw2MmY4Y2U5Zjc0YjEyZjg0YzEyM2NjMjM0MzdhNGEzMiZmYl9hcGlfcmVxX2ZyaWVuZGx5X25hbWU9YXV0aGVudGljYXRlJmNwbD10cnVlIiwgaGVhZGVycz1oZWFkZXIpLnRleHQNCgkJCQkJCQlxID0ganNvbi5sb2FkcyhkYXRhKQ0KCQkJCQkJCWlmICJhY2Nlc3NfdG9rZW4iIGluIHE6DQoJCQkJCQkJCXByaW50KCIgXDAzM1sxOzk1bSBbWElESS1PS10gIit1aWQrIiB8ICIrcGFzczMrIlwwMzNbMDs5N20iKQ0KCQkJCQkJCQlvayA9IG9wZW4oIlhJRElvay50eHQiLCAiYSIpDQoJCQkJCQkJCW9rLndyaXRlKHVpZCsifCIrcGFzczMrIlxuIikNCgkJCQkJCQkJb2suY2xvc2UoKQ0KCQkJCQkJCQlva3MuYXBwZW5kKHVpZCtwYXNzMykNCgkJCQkJCQllbHNlOg0KCQkJCQkJCQlpZiAid3d3LmZhY2Vib29rLmNvbSIgaW4gcVsiZXJyb3JfbXNnIl06DQoJCQkJCQkJCQlwcmludCgiIFwwMzNbMTs5N20gW1hJREktQ1BdICIrdWlkKyIgfCAiK3Bhc3MzKyJcMDMzWzA7OTdtIikNCgkJCQkJCQkJCWNwID0gb3BlbigiWElESWNwLnR4dCIsICJhIikNCgkJCQkJCQkJCWNwLndyaXRlKHVpZCsifCIrcGFzczMrIlxuIikNCgkJCQkJCQkJCWNwLmNsb3NlKCkNCgkJCQkJCQkJCWNwcy5hcHBlbmQodWlkK3Bhc3MzKQ0KCQkJCQkJCQllbHNlOg0KCQkJCQkJCQkJZGF0YSA9IHNlc3Npb24uZ2V0KCJodHRwczovL2ItYXBpLmZhY2Vib29rLmNvbS9tZXRob2QvYXV0aC5sb2dpbj9mb3JtYXQ9anNvbiZlbWFpbD0iK3VpZCsiJnBhc3N3b3JkPSIrcGFzczQrIiZjcmVkZW50aWFsc190eXBlPWRldmljZV9iYXNlZF9sb2dpbl9wYXNzd29yZCZnZW5lcmF0ZV9zZXNzaW9uX2Nvb2tpZXM9MSZlcnJvcl9kZXRhaWxfdHlwZT1idXR0b25fd2l0aF9kaXNhYmxlZCZzb3VyY2U9ZGV2aWNlX2Jhc2VkX2xvZ2luJm1ldGFfaW5mX2ZibWV0YT0lMjAmY3VycmVudGx5X2xvZ2dlZF9pbl91c2VyaWQ9MCZtZXRob2Q9R0VUJmxvY2FsZT1lbl9VUyZjbGllbnRfY291bnRyeV9jb2RlPVVTJmZiX2FwaV9jYWxsZXJfY2xhc3M9Y29tLmZhY2Vib29rLmZvcy5oZWFkZXJzdjIuZmI0YW9yY2EuSGVhZGVyc1YyQ29uZmlnRmV0Y2hSZXF1ZXN0SGFuZGxlciZhY2Nlc3NfdG9rZW49MzUwNjg1NTMxNzI4fDYyZjhjZTlmNzRiMTJmODRjMTIzY2MyMzQzN2E0YTMyJmZiX2FwaV9yZXFfZnJpZW5kbHlfbmFtZT1hdXRoZW50aWNhdGUmY3BsPXRydWUiLCBoZWFkZXJzPWhlYWRlcikudGV4dA0KCQkJCQkJCQkJcSA9IGpzb24ubG9hZHMoZGF0YSkNCgkJCQkJCQkJCWlmICJhY2Nlc3NfdG9rZW4iIGluIHE6DQoJCQkJCQkJCQkJcHJpbnQoIiBcMDMzWzE7OTVtIFtYSURJLU9LXSAiK3VpZCsiIHwgIitwYXNzNCsiXDAzM1swOzk3bSIpDQoJCQkJCQkJCQkJb2sgPSBvcGVuKCJYSURJb2sudHh0IiwgImEiKQ0KCQkJCQkJCQkJCW9rLndyaXRlKHVpZCsifCIrcGFzczQrIlxuIikNCgkJCQkJCQkJCQlvay5jbG9zZSgpDQoJCQkJCQkJCQkJb2tzLmFwcGVuZCh1aWQrcGFzczQpDQoJCQkJCQkJCQllbHNlOg0KCQkJCQkJCQkJCWlmICJ3d3cuZmFjZWJvb2suY29tIiBpbiBxWyJlcnJvcl9tc2ciXToNCgkJCQkJCQkJCQkJcHJpbnQoIiBcMDMzWzE7OTdtIFtYSURJLUNQXSAiK3VpZCsiIHwgIitwYXNzNCsiXDAzM1swOzk3bSIpDQoJCQkJCQkJCQkJCWNwID0gb3BlbigiWElESWNwLnR4dCIsICJhIikNCgkJCQkJCQkJCQkJY3Aud3JpdGUodWlkKyJ8IitwYXNzNCsiXG4iKQ0KCQkJCQkJCQkJCQljcC5jbG9zZSgpDQoJCQkJCQkJCQkJCWNwcy5hcHBlbmQodWlkK3Bhc3M0KQ0KCQkJCQkJCQkJCWVsc2U6DQoJCQkJCQkJCQkJCWRhdGEgPSBzZXNzaW9uLmdldCgiaHR0cHM6Ly9iLWFwaS5mYWNlYm9vay5jb20vbWV0aG9kL2F1dGgubG9naW4/Zm9ybWF0PWpzb24mZW1haWw9Iit1aWQrIiZwYXNzd29yZD0iK3Bhc3M1KyImY3JlZGVudGlhbHNfdHlwZT1kZXZpY2VfYmFzZWRfbG9naW5fcGFzc3dvcmQmZ2VuZXJhdGVfc2Vzc2lvbl9jb29raWVzPTEmZXJyb3JfZGV0YWlsX3R5cGU9YnV0dG9uX3dpdGhfZGlzYWJsZWQmc291cmNlPWRldmljZV9iYXNlZF9sb2dpbiZtZXRhX2luZl9mYm1ldGE9JTIwJmN1cnJlbnRseV9sb2dnZWRfaW5fdXNlcmlkPTAmbWV0aG9kPUdFVCZsb2NhbGU9ZW5fVVMmY2xpZW50X2NvdW50cnlfY29kZT1VUyZmYl9hcGlfY2FsbGVyX2NsYXNzPWNvbS5mYWNlYm9vay5mb3MuaGVhZGVyc3YyLmZiNGFvcmNhLkhlYWRlcnNWMkNvbmZpZ0ZldGNoUmVxdWVzdEhhbmRsZXImYWNjZXNzX3Rva2VuPTM1MDY4NTUzMTcyOHw2MmY4Y2U5Zjc0YjEyZjg0YzEyM2NjMjM0MzdhNGEzMiZmYl9hcGlfcmVxX2ZyaWVuZGx5X25hbWU9YXV0aGVudGljYXRlJmNwbD10cnVlIiwgaGVhZGVycz1oZWFkZXIpLnRleHQNCgkJCQkJCQkJCQkJcSA9IGpzb24ubG9hZHMoZGF0YSkNCgkJCQkJCQkJCQkJaWYgImFjY2Vzc190b2tlbiIgaW4gcToNCgkJCQkJCQkJCQkJCXByaW50KCJcMDMzWzE7OTVtIFtYSURJLU9LXSAiK3VpZCsiIHwgIitwYXNzNSsiXDAzM1swOzk3bSIpDQoJCQkJCQkJCQkJCQlvayA9IG9wZW4oIlhJRElvay50eHQiLCAiYSIpDQoJCQkJCQkJCQkJCQlvay53cml0ZSh1aWQrInwiK3Bhc3M1KyJcbiIpDQoJCQkJCQkJCQkJCQlvay5jbG9zZSgpDQoJCQkJCQkJCQkJCQlva3MuYXBwZW5kKHVpZCtwYXNzNSkNCgkJCQkJCQkJCQkJZWxzZToNCgkJCQkJCQkJCQkJCWlmICJ3d3cuZmFjZWJvb2suY29tIiBpbiBxWyJlcnJvcl9tc2ciXToNCgkJCQkJCQkJCQkJCQlwcmludCgiIFwwMzNbMTs5N20gW1hJREktQ1BdICIrdWlkKyIgfCAiK3Bhc3M1KyJcMDMzWzA7OTdtIikNCgkJCQkJCQkJCQkJCQljcCA9IG9wZW4oIlhJREljcC50eHQiLCAiYSIpDQoJCQkJCQkJCQkJCQkJY3Aud3JpdGUodWlkKyJ8IitwYXNzNSsiXG4iKQ0KCQkJCQkJCQkJCQkJCWNwLmNsb3NlKCkNCgkJCQkJCQkJCQkJCQljcHMuYXBwZW5kKHVpZCtwYXNzNSkNCgkJCQkJCQkJCQkJCWVsc2U6DQoJCQkJCQkJCQkJCQkJZGF0YSA9IHNlc3Npb24uZ2V0KCJodHRwczovL2ItYXBpLmZhY2Vib29rLmNvbS9tZXRob2QvYXV0aC5sb2dpbj9mb3JtYXQ9anNvbiZlbWFpbD0iK3VpZCsiJnBhc3N3b3JkPSIrcGFzczYrIiZjcmVkZW50aWFsc190eXBlPWRldmljZV9iYXNlZF9sb2dpbl9wYXNzd29yZCZnZW5lcmF0ZV9zZXNzaW9uX2Nvb2tpZXM9MSZlcnJvcl9kZXRhaWxfdHlwZT1idXR0b25fd2l0aF9kaXNhYmxlZCZzb3VyY2U9ZGV2aWNlX2Jhc2VkX2xvZ2luJm1ldGFfaW5mX2ZibWV0YT0lMjAmY3VycmVudGx5X2xvZ2dlZF9pbl91c2VyaWQ9MCZtZXRob2Q9R0VUJmxvY2FsZT1lbl9VUyZjbGllbnRfY291bnRyeV9jb2RlPVVTJmZiX2FwaV9jYWxsZXJfY2xhc3M9Y29tLmZhY2Vib29rLmZvcy5oZWFkZXJzdjIuZmI0YW9yY2EuSGVhZGVyc1YyQ29uZmlnRmV0Y2hSZXF1ZXN0SGFuZGxlciZhY2Nlc3NfdG9rZW49MzUwNjg1NTMxNzI4fDYyZjhjZTlmNzRiMTJmODRjMTIzY2MyMzQzN2E0YTMyJmZiX2FwaV9yZXFfZnJpZW5kbHlfbmFtZT1hdXRoZW50aWNhdGUmY3BsPXRydWUiLCBoZWFkZXJzPWhlYWRlcikudGV4dA0KCQkJCQkJCQkJCQkJCXEgPSBqc29uLmxvYWRzKGRhdGEpDQoJCQkJCQkJCQkJCQkJaWYgImFjY2Vzc190b2tlbiIgaW4gcToNCgkJCQkJCQkJCQkJCQkJcHJpbnQoIiBcMDMzWzE7OTVtIFtYSURJLU9LXSAiK3VpZCsiIHwgIitwYXNzNisiXDAzM1swOzk3bSIpDQoJCQkJCQkJCQkJCQkJCW9rID0gb3BlbigiWElESW9rLnR4dCIsICJhIikNCgkJCQkJCQkJCQkJCQkJb2sud3JpdGUodWlkKyJ8IitwYXNzNisiXG4iKQ0KCQkJCQkJCQkJCQkJCQlvay5jbG9zZSgpDQoJCQkJCQkJCQkJCQkJCW9rcy5hcHBlbmQodWlkK3Bhc3M2KQ0KCQkJCQkJCQkJCQkJCWVsc2U6DQoJCQkJCQkJCQkJCQkJCWlmICJ3d3cuZmFjZWJvb2suY29tIiBpbiBxWyJlcnJvcl9tc2ciXToNCgkJCQkJCQkJCQkJCQkJCXByaW50KCIgXDAzM1sxOzk3bSBbWElESS1DUF0gIit1aWQrIiB8ICIrcGFzczYrIlwwMzNbMDs5N20iKQ0KCQkJCQkJCQkJCQkJCQkJY3AgPSBvcGVuKCJYSURJY3AudHh0IiwgImEiKQ0KCQkJCQkJCQkJCQkJCQkJY3Aud3JpdGUodWlkKyJ8IitwYXNzNisiXG4iKQ0KCQkJCQkJCQkJCQkJCQkJY3AuY2xvc2UoKQ0KCQkJCQkJCQkJCQkJCQkJY3BzLmFwcGVuZCh1aWQrcGFzczYpDQoJCQkJCQkJCQkJCQkJCWVsc2U6DQoJCQkJCQkJCQkJCQkJCQlkYXRhID0gc2Vzc2lvbi5nZXQoImh0dHBzOi8vYi1hcGkuZmFjZWJvb2suY29tL21ldGhvZC9hdXRoLmxvZ2luP2Zvcm1hdD1qc29uJmVtYWlsPSIrdWlkKyImcGFzc3dvcmQ9IitwYXNzNysiJmNyZWRlbnRpYWxzX3R5cGU9ZGV2aWNlX2Jhc2VkX2xvZ2luX3Bhc3N3b3JkJmdlbmVyYXRlX3Nlc3Npb25fY29va2llcz0xJmVycm9yX2RldGFpbF90eXBlPWJ1dHRvbl93aXRoX2Rpc2FibGVkJnNvdXJjZT1kZXZpY2VfYmFzZWRfbG9naW4mbWV0YV9pbmZfZmJtZXRhPSUyMCZjdXJyZW50bHlfbG9nZ2VkX2luX3VzZXJpZD0wJm1ldGhvZD1HRVQmbG9jYWxlPWVuX1VTJmNsaWVudF9jb3VudHJ5X2NvZGU9VVMmZmJfYXBpX2NhbGxlcl9jbGFzcz1jb20uZmFjZWJvb2suZm9zLmhlYWRlcnN2Mi5mYjRhb3JjYS5IZWFkZXJzVjJDb25maWdGZXRjaFJlcXVlc3RIYW5kbGVyJmFjY2Vzc190b2tlbj0zNTA2ODU1MzE3Mjh8NjJmOGNlOWY3NGIxMmY4NGMxMjNjYzIzNDM3YTRhMzImZmJfYXBpX3JlcV9mcmllbmRseV9uYW1lPWF1dGhlbnRpY2F0ZSZjcGw9dHJ1ZSIsIGhlYWRlcnM9aGVhZGVyKS50ZXh0DQoJCQkJCQkJCQkJCQkJCQlxID0ganNvbi5sb2FkcyhkYXRhKQ0KCQkJCQkJCQkJCQkJCQkJaWYgImFjY2Vzc190b2tlbiIgaW4gcToNCgkJCQkJCQkJCQkJCQkJCQlwcmludCgiIFwwMzNbMTs5NW0gW1hJREktT0tdICIrdWlkKyIgfCAiK3Bhc3M3KyJcMDMzWzA7OTdtIikNCgkJCQkJCQkJCQkJCQkJCQlvayA9IG9wZW4oIlhJRElvay50eHQiLCAiYSIpDQoJCQkJCQkJCQkJCQkJCQkJb2sud3JpdGUodWlkKyJ8IitwYXNzNysiXG4iKQ0KCQkJCQkJCQkJCQkJCQkJCW9rLmNsb3NlKCkNCgkJCQkJCQkJCQkJCQkJCQlva3MuYXBwZW5kKHVpZCtwYXNzNykNCgkJCQkJCQkJCQkJCQkJCWVsc2U6DQoJCQkJCQkJCQkJCQkJCQkJaWYgInd3dy5mYWNlYm9vay5jb20iIGluIHFbImVycm9yX21zZyJdOg0KCQkJCQkJCQkJCQkJCQkJCQlwcmludCgiIFwwMzNbMTs5NW0gW1hJREktQ1BdICIrdWlkKyIgfCAiK3Bhc3M3KyJcMDMzWzA7OTdtIikNCgkJCQkJCQkJCQkJCQkJCQkJY3AgPSBvcGVuKCJYSURJY3AudHh0IiwgImEiKQ0KCQkJCQkJCQkJCQkJCQkJCQljcC53cml0ZSh1aWQrInwiK3Bhc3M3KyJcbiIpDQoJCQkJCQkJCQkJCQkJCQkJCWNwLmNsb3NlKCkNCgkJCQkJCQkJCQkJCQkJCQkJY3BzLmFwcGVuZCh1aWQrcGFzczcpDQoJCWV4Y2VwdDoNCgkJCXBhc3MNCglwID0gVGhyZWFkUG9vbCgzMCkNCglwLm1hcChtYWluLCBpZCkNCglwcmludCgiIikNCglwcmludCgiIikNCglwcmludCg0NyoiLSIpDQoJcHJpbnQoIiBceDFiWzE7OTdtICBUaGUgcHJvY2VzcyBoYXMgYmVlbiBjb21wbGV0ZWQiKQ0KCXByaW50KCIgXHgxYlsxOzk1bSAgIFRvdGFsIE9rL0NwOiAiK3N0cihsZW4ob2tzKSkrIi8iK3N0cihsZW4oY3BzKSkpDQoJcHJpbnQoNDcqIi0iKQ0KCXByaW50KCIiKQ0KCXByaW50KCIiKQ0KCXJhd19pbnB1dCgiIFx4MWJbMTs5NW0gUHJlc3MgZW50ZXIgdG8gYmFjayAiKQ0KCW1haW4oKQ0KCQ0KCQ0KaWYgX19uYW1lX18gPT0gJ19fbWFpbl9fJzoNCgltYWluKCkNCg0KDQo="))